{"version":3,"file":"js/449.d21b0b5f.js","mappings":"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","sources":["webpack://cc-love/./src/components/AmazingLove/index.vue","webpack://cc-love/src/components/AmazingLove/index.vue","webpack://cc-love/./src/components/AmazingLove/index.vue?8c91","webpack://cc-love/./src/components/AmazingLove/index.vue?fbc1"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"container\"}},[_c('canvas',{attrs:{\"id\":\"pinkboard\"}})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"container\">\r\n    <canvas id=\"pinkboard\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n/*\r\n* Settings\r\n*/\r\nvar settings = {\r\n  particles: {\r\n    length: 500, // maximum amount of particles\r\n    duration: 2, // particle duration in sec\r\n    velocity: 100, // particle velocity in pixels/sec\r\n    effect: -0.75, // play with this for a nice effect\r\n    size: 30, // particle size in pixels\r\n  },\r\n};\r\n\r\n/*\r\n * RequestAnimationFrame polyfill by Erik MÃ¶ller\r\n */\r\n(function () { var b = 0; var c = [\"ms\", \"moz\", \"webkit\", \"o\"]; for (var a = 0; a < c.length && !window.requestAnimationFrame; ++a) { window.requestAnimationFrame = window[c[a] + \"RequestAnimationFrame\"]; window.cancelAnimationFrame = window[c[a] + \"CancelAnimationFrame\"] || window[c[a] + \"CancelRequestAnimationFrame\"] } if (!window.requestAnimationFrame) { window.requestAnimationFrame = function (h) { var d = new Date().getTime(); var f = Math.max(0, 16 - (d - b)); var g = window.setTimeout(function () { h(d + f) }, f); b = d + f; return g } } if (!window.cancelAnimationFrame) { window.cancelAnimationFrame = function (d) { clearTimeout(d) } } }());\r\n\r\n/*\r\n * Point class\r\n */\r\nvar Point = (function () {\r\n  function Point(x, y) {\r\n    this.x = (typeof x !== 'undefined') ? x : 0;\r\n    this.y = (typeof y !== 'undefined') ? y : 0;\r\n  }\r\n  Point.prototype.clone = function () {\r\n    return new Point(this.x, this.y);\r\n  };\r\n  Point.prototype.length = function (length) {\r\n    if (typeof length == 'undefined')\r\n      return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    this.normalize();\r\n    this.x *= length;\r\n    this.y *= length;\r\n    return this;\r\n  };\r\n  Point.prototype.normalize = function () {\r\n    var length = this.length();\r\n    this.x /= length;\r\n    this.y /= length;\r\n    return this;\r\n  };\r\n  return Point;\r\n})();\r\n\r\n/*\r\n * Particle class\r\n */\r\nvar Particle = (function () {\r\n  function Particle() {\r\n    this.position = new Point();\r\n    this.velocity = new Point();\r\n    this.acceleration = new Point();\r\n    this.age = 0;\r\n  }\r\n  Particle.prototype.initialize = function (x, y, dx, dy) {\r\n    this.position.x = x;\r\n    this.position.y = y;\r\n    this.velocity.x = dx;\r\n    this.velocity.y = dy;\r\n    this.acceleration.x = dx * settings.particles.effect;\r\n    this.acceleration.y = dy * settings.particles.effect;\r\n    this.age = 0;\r\n  };\r\n  Particle.prototype.update = function (deltaTime) {\r\n    this.position.x += this.velocity.x * deltaTime;\r\n    this.position.y += this.velocity.y * deltaTime;\r\n    this.velocity.x += this.acceleration.x * deltaTime;\r\n    this.velocity.y += this.acceleration.y * deltaTime;\r\n    this.age += deltaTime;\r\n  };\r\n  Particle.prototype.draw = function (context, image) {\r\n    function ease(t) {\r\n      return (--t) * t * t + 1;\r\n    }\r\n    var size = image.width * ease(this.age / settings.particles.duration);\r\n    context.globalAlpha = 1 - this.age / settings.particles.duration;\r\n    context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\r\n  };\r\n  return Particle;\r\n})();\r\n\r\n/*\r\n * ParticlePool class\r\n */\r\nvar ParticlePool = (function () {\r\n  var particles,\r\n    firstActive = 0,\r\n    firstFree = 0,\r\n    duration = settings.particles.duration;\r\n\r\n  function ParticlePool(length) {\r\n    // create and populate particle pool\r\n    particles = new Array(length);\r\n    for (var i = 0; i < particles.length; i++)\r\n      particles[i] = new Particle();\r\n  }\r\n  ParticlePool.prototype.add = function (x, y, dx, dy) {\r\n    particles[firstFree].initialize(x, y, dx, dy);\r\n\r\n    // handle circular queue\r\n    firstFree++;\r\n    if (firstFree == particles.length) firstFree = 0;\r\n    if (firstActive == firstFree) firstActive++;\r\n    if (firstActive == particles.length) firstActive = 0;\r\n  };\r\n  ParticlePool.prototype.update = function (deltaTime) {\r\n    var i;\r\n\r\n    // update active particles\r\n    if (firstActive < firstFree) {\r\n      for (i = firstActive; i < firstFree; i++)\r\n        particles[i].update(deltaTime);\r\n    }\r\n    if (firstFree < firstActive) {\r\n      for (i = firstActive; i < particles.length; i++)\r\n        particles[i].update(deltaTime);\r\n      for (i = 0; i < firstFree; i++)\r\n        particles[i].update(deltaTime);\r\n    }\r\n\r\n    // remove inactive particles\r\n    while (particles[firstActive].age >= duration && firstActive != firstFree) {\r\n      firstActive++;\r\n      if (firstActive == particles.length) firstActive = 0;\r\n    }\r\n\r\n\r\n  };\r\n  ParticlePool.prototype.draw = function (context, image) {\r\n    // draw active particles\r\n    if (firstActive < firstFree) {\r\n      for (var i = firstActive; i < firstFree; i++)\r\n        particles[i].draw(context, image);\r\n    }\r\n    if (firstFree < firstActive) {\r\n      for (i = firstActive; i < particles.length; i++)\r\n        particles[i].draw(context, image);\r\n      for (i = 0; i < firstFree; i++)\r\n        particles[i].draw(context, image);\r\n    }\r\n  };\r\n  return ParticlePool;\r\n})();\r\n\r\n/*\r\n * Putting it all together\r\n */\r\nsetTimeout(() => {\r\n  (function (canvas) {\r\n  var context = canvas.getContext('2d'),\r\n    particles = new ParticlePool(settings.particles.length),\r\n    particleRate = settings.particles.length / settings.particles.duration, // particles/sec\r\n    time;\r\n\r\n  // get point on heart with -PI <= t <= PI\r\n  function pointOnHeart(t) {\r\n    return new Point(\r\n      160 * Math.pow(Math.sin(t), 3),\r\n      130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25\r\n    );\r\n  }\r\n\r\n  // creating the particle image using a dummy canvas\r\n  var image = (function () {\r\n    var canvas = document.createElement('canvas'),\r\n      context = canvas.getContext('2d');\r\n    canvas.width = settings.particles.size;\r\n    canvas.height = settings.particles.size;\r\n    // helper function to create the path\r\n    function to(t) {\r\n      var point = pointOnHeart(t);\r\n      point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\r\n      point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\r\n      return point;\r\n    }\r\n    // create the path\r\n    context.beginPath();\r\n    var t = -Math.PI;\r\n    var point = to(t);\r\n    context.moveTo(point.x, point.y);\r\n    while (t < Math.PI) {\r\n      t += 0.01; // baby steps!\r\n      point = to(t);\r\n      context.lineTo(point.x, point.y);\r\n    }\r\n    context.closePath();\r\n    // create the fill\r\n    context.fillStyle = '#ea80b0';\r\n    context.fill();\r\n    // create the image\r\n    var image = new Image();\r\n    image.src = canvas.toDataURL();\r\n    return image;\r\n  })();\r\n\r\n  // render that thing!\r\n  function render() {\r\n    // next animation frame\r\n    requestAnimationFrame(render);\r\n\r\n    // update time\r\n    var newTime = new Date().getTime() / 1000,\r\n      deltaTime = newTime - (time || newTime);\r\n    time = newTime;\r\n\r\n    // clear canvas\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // create new particles\r\n    var amount = particleRate * deltaTime;\r\n    for (var i = 0; i < amount; i++) {\r\n      var pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\r\n      var dir = pos.clone().length(settings.particles.velocity);\r\n      particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y);\r\n    }\r\n\r\n    // update and draw particles\r\n    particles.update(deltaTime);\r\n    particles.draw(context, image);\r\n  }\r\n\r\n  // handle (re-)sizing of the canvas\r\n  function onResize() {\r\n    canvas.width = canvas.clientWidth;\r\n    canvas.height = canvas.clientHeight;\r\n  }\r\n  window.onresize = onResize;\r\n\r\n  // delay rendering bootstrap\r\n  setTimeout(function () {\r\n    onResize();\r\n    render();\r\n  }, 10);\r\n})(document.getElementById('pinkboard'));\r\n}, 100);\r\n\r\nexport default {\r\n  name: 'AmazingLove',\r\n  data() {\r\n    return {\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n#container {\r\n  height: 100vh;\r\n  padding: 0;\r\n  margin: 0;\r\n  background: #000;\r\n}\r\n\r\ncanvas {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1f58ded7&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=1f58ded7&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1f58ded7\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_self","_c","_m","staticRenderFns","attrs","settings","particles","length","duration","velocity","effect","size","window","h","b","clearTimeout","Point","Particle","context","ParticlePool","firstActive","firstFree","setTimeout","time","particleRate","point","canvas","t","image","requestAnimationFrame","deltaTime","onResize","document","getElementById","name","data","component"],"sourceRoot":""}